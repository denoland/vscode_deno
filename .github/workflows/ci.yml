name: ci
permissions:
  contents: write

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # WARNING: Test extension with packaged .vsix whenever upgrading vsce
      VSCE_COMMAND: ${{ '@vscode/vsce@2.31.0' }}
    name: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "20.16.0"

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "dir=$(npm config get cache)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Deno
        uses: denoland/setup-deno@main
        with:
          deno-version: 1.x

      - name: Environment
        run: |
          node -v
          npm -v
          deno --version

      - name: Install npm packages
        run: npm i

      - name: Format
        run: npm run fmt --check

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run test-compile

      - name: Package
        run: npx $VSCE_COMMAND package -o vscode-deno.vsix

      - name: Artifact upload
        uses: actions/upload-artifact@v4
        with:
          name: vscode-deno
          path: vscode-deno.vsix

      - name: Release
        if: |
          github.repository == 'denoland/vscode_deno' &&
          startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            vscode-deno.vsix

      - name: Publish
        if: |
          github.repository == 'denoland/vscode_deno' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          # https://dev.azure.com/propelml/_usersSettings/tokens
          AZURE_PAT: ${{ secrets.AZURE_PAT }}
        run: npx $VSCE_COMMAND publish --pat $AZURE_PAT
